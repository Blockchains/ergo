(module
  (type $0 (func (result i32)))
  (type $1 (func (param i32 i32) (result i32)))
  (import "memory" "object" (memory $0 1))
  (table $0 9 funcref)
  (func $0
    (type 1)
    (local.get 0)
    (i32.load)
    (local.get 1)
    (i32.load)
    (i32.lt_u)
    (if
      (type 0)
      (then (i32.const -1))
      (else
        (local.get 0)
        (i32.load)
        (local.get 1)
        (i32.load)
        (i32.gt_u)
      )
    )
  )
  (func $1
    (type 1)
    (local i32)
    (local.get 0)
    (local.get 1)
    (call 0)
    (local.tee 2)
    (i32.const 0)
    (i32.eq)
    (if
      (type 0)
      (then
        (local.get 0)
        (i32.const 4)
        (i32.add)
        (local.get 1)
        (i32.const 4)
        (i32.add)
        (local.get 0)
        (i32.load)
        (i32.const 0)
        (i32.add)
        (call_indirect (type 1))
      )
      (else (local.get 2))
    )
  )
  (func $2 (type 1) (i32.const 0))
  (func $3
    (type 1)
    (local.get 0)
    (i32.load)
    (local.get 1)
    (i32.load)
    (i32.lt_s)
    (if
      (type 0)
      (then (i32.const -1))
      (else
        (local.get 0)
        (i32.load)
        (local.get 1)
        (i32.load)
        (i32.gt_s)
      )
    )
  )
  (func $4
    (type 1)
    (local.get 0)
    (f32.load)
    (local.get 1)
    (f32.load)
    (f32.lt)
    (if
      (type 0)
      (then (i32.const -1))
      (else (local.get 0) (f32.load) (local.get 1) (f32.load) (f32.gt))
    )
  )
  (func $5
    (type 1)
    (local.get 0)
    (i32.load)
    (local.get 1)
    (i32.load)
    (call 1)
  )
  (func $6
    (type 1)
    (local i32)
    (local.get 0)
    (i32.load)
    (local.get 1)
    (i32.load)
    (call 1)
    (local.tee 2)
    (i32.const 0)
    (i32.eq)
    (if
      (type 0)
      (then
        (local.get 0)
        (i32.load offset=4)
        (local.get 1)
        (i32.load offset=4)
        (call 1)
      )
      (else (local.get 2))
    )
  )
  (func $7
    (type 1)
    (local i32 i32)
    (local.get 0)
    (local.get 1)
    (call 0)
    (local.tee 2)
    (i32.const 0)
    (i32.eq)
    (if
      (type 0)
      (then
        (local.get 0)
        (i32.load)
        (local.get 0)
        (i32.const 3)
        (i32.add)
        (local.tee 0)
        (i32.add)
        (local.set 3)
        (local.get 1)
        (i32.const 3)
        (i32.add)
        (local.set 1)
        (loop
          (type 0)
          (local.get 0)
          (local.get 3)
          (i32.ge_u)
          (if
            (type 0)
            (then (i32.const 0))
            (else
              (local.get 0)
              (i32.const 1)
              (i32.add)
              (local.tee 0)
              (i32.load8_u)
              (local.get 1)
              (i32.const 1)
              (i32.add)
              (local.tee 1)
              (i32.load8_u)
              (call 0)
              (local.tee 2)
              (i32.const 0)
              (i32.eq)
              (br_if 1)
              (local.get 2)
            )
          )
        )
      )
      (else (local.get 2))
    )
  )
  (export "compare" (func 1))
  (elem 0 (offset (i32.const 0)) 2 2 2 3 4 5 5 6 7)
)
